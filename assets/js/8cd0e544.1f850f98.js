"use strict";(self.webpackChunkuniversal_react_docs=self.webpackChunkuniversal_react_docs||[]).push([[117],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),c=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=c(t.components);return a.createElement(s.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),u=c(n),d=r,k=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(k,o(o({ref:e},p),{},{components:n})):a.createElement(k,o({ref:e},p))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1330:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={id:"smart-context",title:"smart-context",sidebar_label:"Smart Context"},s="smart-context",c={unversionedId:"smart-context",id:"smart-context",title:"smart-context",description:"npm version Build Status Coverage Status semantic-release",source:"@site/docs/smart-context.md",sourceDirName:".",slug:"/smart-context",permalink:"/universal-react-docs/docs/smart-context",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/smart-context.md",tags:[],version:"current",frontMatter:{id:"smart-context",title:"smart-context",sidebar_label:"Smart Context"},sidebar:"someSidebar",previous:{title:"Quality Control",permalink:"/universal-react-docs/docs/qualiy-control"},next:{title:"Unit Testing",permalink:"/universal-react-docs/docs/unit-testing"}},p={},m=[{value:"Demo",id:"demo",level:2},{value:"Installation",id:"installation",level:2},{value:"Breaking changes",id:"breaking-changes",level:2},{value:"Example",id:"example",level:2},{value:"Initialization",id:"initialization",level:3},{value:"Example - Function component",id:"example---function-component",level:3},{value:"Example - Class component",id:"example---class-component",level:3},{value:"API",id:"api",level:2},{value:"Config options",id:"config-options",level:2},{value:"Action Types",id:"action-types",level:2},{value:"List - Flat object updates",id:"list---flat-object-updates",level:3},{value:"Function - Async data, deep nested state object, external lib integration such as immer",id:"function---async-data-deep-nested-state-object-external-lib-integration-such-as-immer",level:3},{value:"Reset Action",id:"reset-action",level:3}],u={toc:m};function d(t){var e=t.components,n=(0,r.Z)(t,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"smart-context"},"smart-context"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://badge.fury.io/js/smart-context"},(0,i.kt)("img",{parentName:"a",src:"https://badge.fury.io/js/smart-context.svg",alt:"npm version"}))," ",(0,i.kt)("a",{parentName:"p",href:"https://travis-ci.com/achaljain/smart-context"},(0,i.kt)("img",{parentName:"a",src:"https://travis-ci.com/achaljain/smart-context.svg?branch=master",alt:"Build Status"}))," ",(0,i.kt)("a",{parentName:"p",href:"https://coveralls.io/github/achaljain/smart-context?branch=master"},(0,i.kt)("img",{parentName:"a",src:"https://coveralls.io/repos/github/achaljain/smart-context/badge.svg?branch=master",alt:"Coverage Status"}))," ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/semantic-release/semantic-release"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg",alt:"semantic-release"}))),(0,i.kt)("p",null,"React state management made easy. Inspired by Redux. Powered by Context."),(0,i.kt)("h2",{id:"demo"},"Demo"),(0,i.kt)("p",null,"Here is the working ",(0,i.kt)("a",{parentName:"p",href:"https://react-smart-context-demo.stackblitz.io"},"demo")," with src ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/achaljain/react-smart-context-demo"},"link")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"v2 updates")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Supports async actions"),(0,i.kt)("li",{parentName:"ul"},"Supports external lib plugins e.g immer.js")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Highlights")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Lightweight. No additional dependencies"),(0,i.kt)("li",{parentName:"ul"},"Based on in-built context API"),(0,i.kt)("li",{parentName:"ul"},"Easy configuration"),(0,i.kt)("li",{parentName:"ul"},"Debug mode"),(0,i.kt)("li",{parentName:"ul"},"Secure state updates"),(0,i.kt)("li",{parentName:"ul"},"Supports multiple stores/contexts"),(0,i.kt)("li",{parentName:"ul"},"Available in esm, cjs, umd formats")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"npm")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install smart-context\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"yarn")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add smart-context\n")),(0,i.kt)("h2",{id:"breaking-changes"},"Breaking changes"),(0,i.kt)("p",null,"v2 introduces new API and features. Refer ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pagesource/universal-react/tree/develop/readme"},"v1 docs and example"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"initContext")," is removed. Use ",(0,i.kt)("inlineCode",{parentName:"li"},"WithContextProvider")," HOC"),(0,i.kt)("li",{parentName:"ul"},"Support for class components enabled. Added ",(0,i.kt)("inlineCode",{parentName:"li"},"WithContextConsumer")," HOC"),(0,i.kt)("li",{parentName:"ul"},"Custom actions functions should return state transform function instead of new state object")),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"React context acts as global store. It contains ",(0,i.kt)("inlineCode",{parentName:"p"},"state")," object and ",(0,i.kt)("inlineCode",{parentName:"p"},"actions")," that trigger state updates. All components that consume the ",(0,i.kt)("inlineCode",{parentName:"p"},"state")," will be updated on every action dispatch."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Initialize with options: ",(0,i.kt)("inlineCode",{parentName:"li"},"actionsConfig, initialState, displayName")),(0,i.kt)("li",{parentName:"ol"},"Wrap the top level ",(0,i.kt)("inlineCode",{parentName:"li"},"App")," component in ",(0,i.kt)("inlineCode",{parentName:"li"},"WithContextProvider")," HOC"),(0,i.kt)("li",{parentName:"ol"},"Get access to context(state, actions) via ",(0,i.kt)("inlineCode",{parentName:"li"},"displayName")," anywhere inside the ",(0,i.kt)("inlineCode",{parentName:"li"},"App"),".")),(0,i.kt)("h3",{id:"initialization"},"Initialization"),(0,i.kt)("p",null,"Decide a top level component to initialize and plug-in ",(0,i.kt)("inlineCode",{parentName:"p"},"smart-context")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'// app.jsx\nimport React from "react";\nimport { WithContextProvider } from "smart-context";\n\nconst initialState = { name: "default", age: 0 };\n\n// Two types of action definitions\nconst actionsConfig = {\n  setName: ["name"],\n  setAge: (age) => (state) => ({ ...state, age }),\n};\n\nconst displayName = "myContext";\n\n/** Config */\nconst config = {\n  initialState,\n  actionsConfig,\n  displayName,\n  debug: true,\n};\n\nconst App = () => (\n  <div id="app-container">\n    All children will have access to state and actions via context\n  </div>\n);\n\n// Apply multiple contexts using list of config objects\nexport default WithContextProvider(App, [config]);\n')),(0,i.kt)("h3",{id:"example---function-component"},"Example - Function component"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'// myAwesomeComponent.jsx\nimport React, { useContext } from "react";\nimport { getContext } from "smart-context";\n\nconst MyAwesomeComponent = () => {\n  // context name is required to access context\n  const {\n    state: { name, age },\n    actions: { setName, setAge, reset },\n  } = useContext(getContext("myContext"));\n\n  const clickHandlerDefault = () => {\n    // default action handler (pass object with exact key names declared in action config)\n    setName({ name: "ABCD" });\n  };\n\n  const clickHandlerCustom = () => {\n    // custom handler\n    setAge(25);\n  };\n\n  const resetHandler = () => {\n    // reset action is auto-generated (if not provided) that restores initial state\n    reset();\n  };\n\n  return (\n    <>\n      <div>\n        `Name: {name} Age: {age}`\n      </div>\n      <button onClick={clickHandlerDefault}>Set Name</button>\n      <button onClick={clickHandlerCustom}>Set Age</button>\n      <button onClick={resetHandler}>Reset</button>\n    </>\n  );\n};\n\nexport default MyAwesomeComponent;\n')),(0,i.kt)("h3",{id:"example---class-component"},"Example - Class component"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from "react";\nimport { WithContextConsumer } from "smart-context";\n\nclass DemoComp extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { state } = props.myContext\n    <div>{state.name}</div>;\n  }\n}\n\n// Wrap component in context consumer HOC. Access multiple contexts using displayName list\nexport default WithContextConsumer(DemoComp, ["myContext"]);\n')),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("p",null,"Following methods are available from this package:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Method"),(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Return"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"WithContextProvider"),(0,i.kt)("td",{parentName:"tr",align:null},"React Component"),(0,i.kt)("td",{parentName:"tr",align:null},"React Component"),(0,i.kt)("td",{parentName:"tr",align:null},"Provider HOC. Accepts list of config objects")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"WithContextConsumer"),(0,i.kt)("td",{parentName:"tr",align:null},"React Component"),(0,i.kt)("td",{parentName:"tr",align:null},"React Component"),(0,i.kt)("td",{parentName:"tr",align:null},"Consumer HOC. Accepts list of displayName")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"getContext"),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"React Context"),(0,i.kt)("td",{parentName:"tr",align:null},"Access context (state and actions)")))),(0,i.kt)("h2",{id:"config-options"},"Config options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"displayName")),": string (mandatory)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"acts as unique identifier of context"),(0,i.kt)("li",{parentName:"ul"},"used as ",(0,i.kt)("inlineCode",{parentName:"li"},"displayName")," in react dev tools"),(0,i.kt)("li",{parentName:"ul"},"required to access the context"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"debug")),": boolean"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"log errors related to invalid action config, action calls and state updates"),(0,i.kt)("li",{parentName:"ul"},"log all successful, failed state updates"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"initialState")),": object (not mandatory but recommended)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"declare some initial state for predictable behavior during initial render and reset"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"actionsConfig")),": object"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"structure: ",(0,i.kt)("inlineCode",{parentName:"li"},"{ actionName: [string] | function }")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"camelCase")," is recommended for ",(0,i.kt)("inlineCode",{parentName:"li"},"actionName")),(0,i.kt)("li",{parentName:"ul"},"see action examples below for supported types"),(0,i.kt)("li",{parentName:"ul"},"an action with name ",(0,i.kt)("inlineCode",{parentName:"li"},"reset")," is auto-generated that restores ",(0,i.kt)("inlineCode",{parentName:"li"},"initialState"))))),(0,i.kt)("h2",{id:"action-types"},"Action Types"),(0,i.kt)("h3",{id:"list---flat-object-updates"},"List - Flat object updates"),(0,i.kt)("p",null,"Provide list of state keys for update. Action call expects an object with same keys. Any other key provided during action dispatch will be ignored. These actions use ES6 spread operator for state updates."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'actionName: ["key1", "key2"];\n')),(0,i.kt)("h3",{id:"function---async-data-deep-nested-state-object-external-lib-integration-such-as-immer"},"Function - Async data, deep nested state object, external lib integration such as immer"),(0,i.kt)("p",null,"Provide a function that returns state transformation function"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"actionName: async (payload) => {\n  // Async API call here\n  const data = await AsyncAPICall()\n\n  // State transform function\n  return (state) => {...state, ...data}\n};\n")),(0,i.kt)("h3",{id:"reset-action"},"Reset Action"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"reset")," action is auto-generated if not provided in config. This action uses flat ES6 spread operator to copy ",(0,i.kt)("inlineCode",{parentName:"p"},"initialState"),". It is recommended to use a custom function in action config, if ",(0,i.kt)("inlineCode",{parentName:"p"},"initialState")," is a deeply nested object"))}d.isMDXComponent=!0}}]);