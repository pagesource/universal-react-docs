"use strict";(self.webpackChunkuniversal_react_docs=self.webpackChunkuniversal_react_docs||[]).push([[814],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=o,m=p["".concat(s,".").concat(d)]||p[d]||g[d]||a;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8817:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return g}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),l=["components"],i={id:"logger",title:"Logger",sidebar_label:"Logger"},s="Custom Browser and Server Logger",c={unversionedId:"logger",id:"logger",title:"Logger",description:"This logger collect logs based on different levels and structures them",source:"@site/docs/logger.md",sourceDirName:".",slug:"/logger",permalink:"/universal-react-docs/docs/logger",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/logger.md",tags:[],version:"current",frontMatter:{id:"logger",title:"Logger",sidebar_label:"Logger"},sidebar:"someSidebar",previous:{title:"Loader",permalink:"/universal-react-docs/docs/loader"},next:{title:"Generate Plop",permalink:"/universal-react-docs/docs/generate-plop"}},u={},g=[{value:"Log structure:",id:"log-structure",level:2},{value:"Usage",id:"usage",level:2}],p={toc:g};function d(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"custom-browser-and-server-logger"},"Custom Browser and Server Logger"),(0,a.kt)("p",null,"This logger collect logs based on different levels and structures them"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Transport logs to an API end-point at browser side "),(0,a.kt)("li",{parentName:"ol"},"Writes logs to server console at server side")),(0,a.kt)("h2",{id:"log-structure"},"Log structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"{\n  appName,\n  logLevel,\n  logInfo: {\n    component,\n    subComponent\n  },\n  browser: {\n    location,\n    host,\n    userAgent\n  },\n  event: {\n    name,\n    attributes\n  },\n  error: {\n    name,\n    attributes\n  },\n  service = {\n    url,\n    body\n  },\n  userInfo,\n  localTimestamp\n};\n")),(0,a.kt)("p",null,"This logger module provides a logger initializer:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"createLogger"),": A utility logger init function that returns a logger which follows the above structure along with some auto-logging features:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"landingLogs"),": takes a boolean value that sets wheather landing logs to be automatically logged or not on url change. Adds an event listener to actively check for url changes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"handleExceptions"),": takes a boolean value that sets wheather unhandled syntax/runtime errors/exceptions to be automatically logged or not. Adds an event listener to actively check for such errors.      ")))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"createLogger:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import createLogger from '../utils/Logger';\n\nconst loggerConfig = {\n  appName: 'application name to be shown in the logs',\n  level: 'info',  // lowest allowed level of log\n  parseUserAgent: true, // return device, browser and os details if true; returns user-agent string if false\n  remoteDataAgregatorUrl: 'http://localhost:4000'  // remote API end-point to post the logs \n}\n\nconst user = {\n  name: 'John Doe',\n  id: '101'\n}\n\nconst Logger = createLogger({\n  loggerConfig,\n  user,\n  landingLogs: true,\n  handleExceptions: true\n});\n\nLogger.error({ \n  logInfo: {\n    component: 'Home',\n    subComponent: 'UserCard'\n  }\n  error: {\n    name: 'failed to fetch',\n    attributes: {\n      code: '400',\n      operationName: 'getUserInfo'\n    }\n  },\n  event: {\n    name: 'click',\n    attributes: {\n      targetElement: 'Button',\n      innerText: 'Show More'\n    }\n  }\n  service: {\n    url: '/get-user-info/'\n  },\n});\n")))}d.isMDXComponent=!0}}]);